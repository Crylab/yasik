name: CI/CD

on:
  push:
  pull_request:

permissions:
  contents: read

jobs:
  ci:
    strategy:
      matrix:
        os: [ubuntu-22.04, windows-2022, macos-12]
      fail-fast: false

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Install poetry
        uses: abatilo/actions-poetry@v2
      - uses: actions/setup-python@v5.0.0
        with:
          cache: 'poetry'
      - uses: actions/setup-java@v4.0.0
        with:
          distribution: 'temurin'
          java-version-file: .java-version
      - name: Install dependencies
        run: poetry install
      - name: Install all dependencies
        run: poetry install
      - name: Static Analysis
        run: poetry run flake8
      - name: Build
        run: poetry build
      - name: Test
        run: poetry run pytest
      - name: Zip the project
        if: contains(runner.os, 'Linux')
        run: zip target.zip *
      - name: Create release
        if: contains(runner.os, 'Linux')
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
      - name: Upload Release Assets
        if: contains(runner.os, 'Linux')
        id: upload_assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./target.zip
          asset_name: target.zip
          asset_content_type: application/zip
